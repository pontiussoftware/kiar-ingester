{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "KIAR Dashboard API",
    "version" : "1.0.0",
    "description" : "API for the KIAR Dashboard."
  },
  "paths" : {
    "/api/institutions" : {
      "get" : {
        "tags" : [ "Institution" ],
        "summary" : "Retrieves all institutions registered in the database.",
        "operationId" : "getInstitutions",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page index (zero-based) for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The attribute to order by. Possible values are 'name', 'city', 'zip', 'canton' and 'publish'.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "The sort order. Possible values are 'asc' and 'desc'.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedInstitutionResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "Institution" ],
        "summary" : "Creates a new institution.",
        "operationId" : "postCreateInstitution",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Institution"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/institutions/name" : {
      "get" : {
        "tags" : [ "Institution" ],
        "summary" : "Retrieves all institution names registered in the database.",
        "operationId" : "getInstitutionNames",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/institutions/synchronize" : {
      "post" : {
        "tags" : [ "Institution" ],
        "summary" : "Synchronizes institutions with an Apache Solr backend.",
        "operationId" : "postSynchronizeInstitutions",
        "parameters" : [ {
          "name" : "solr",
          "in" : "query",
          "description" : "Name of the Apache Solr configuration to use.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "collection",
          "in" : "query",
          "description" : "The name of the collection to synchronize with.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/institutions/{id}" : {
      "get" : {
        "tags" : [ "Institution" ],
        "summary" : "Gets information about an existing institution.",
        "operationId" : "getInstitution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the institution that should be fetched.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Institution"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Institution"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "Institution" ],
        "summary" : "Updates an existing institution.",
        "operationId" : "putUpdateInstitution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the institution that should be updated.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/Institution"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "Institution" ],
        "summary" : "Deletes an existing institution.",
        "operationId" : "deleteInstitution",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the institution that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/institutions/{id}/image" : {
      "post" : {
        "tags" : [ "Institution" ],
        "summary" : "Posts a new image for the provided institution.",
        "operationId" : "postUploadImage",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the institution the image should be added to.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The uploaded image file.",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "image" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs" : {
      "post" : {
        "tags" : [ "Job" ],
        "summary" : "Creates a new job.",
        "operationId" : "postCreateJob",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateJobRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Job"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/active" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves all jobs that are currently active. Non-administrator users can only see Jobs that belong to them.",
        "operationId" : "getActiveJobs",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page index (zero-based) for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedJobResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/inactive" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves all jobs that are currently inactive (job history). Non-administrator users can only see Jobs that belong to them.",
        "operationId" : "getInactiveJobs",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page index (zero-based) for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedJobResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/{id}" : {
      "delete" : {
        "tags" : [ "Job" ],
        "summary" : "Aborts a running job.",
        "operationId" : "deleteAbortJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Job that should be aborted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/{id}/logs" : {
      "get" : {
        "tags" : [ "Job" ],
        "summary" : "Retrieves the job log for the provided job ID.",
        "operationId" : "getJobLog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Job for which the logs should be retrieved.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "page",
          "in" : "query",
          "description" : "The page index (zero-based) for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size  for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedJobLogResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/{id}/schedule" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Starts execution of a job.",
        "operationId" : "putScheduleJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Job that should be started.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/jobs/{id}/upload" : {
      "put" : {
        "tags" : [ "Job" ],
        "summary" : "Uploads a file for the given job.",
        "operationId" : "putUpload",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Job for which a file should be uploaded.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "Set to 'true' if the submitted chunk is the first one.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "last",
          "in" : "query",
          "description" : "Set to 'true' if the submitted chunk is the last one.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "requestBody" : {
          "description" : "The uploaded KIAR file.",
          "content" : {
            "multipart/form-data" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "file" : {
                    "type" : "string",
                    "format" : "binary"
                  }
                }
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/mappings" : {
      "get" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Lists all available entity mappings.",
        "operationId" : "getListEntityMappings",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/EntityMapping"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Creates a new entity mapping.",
        "operationId" : "postCreateEntityMapping",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityMapping"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityMapping"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/mappings/formats" : {
      "get" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Lists all available entity mapping formats.",
        "operationId" : "getListMappingFormats",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MappingFormat"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/mappings/parsers" : {
      "get" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Lists all available parses available for entity mapping.",
        "operationId" : "getListParsers",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ValueParser"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/mappings/{id}" : {
      "get" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Retrieves all the details about an entity mapping.",
        "operationId" : "getEntityMapping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the entity mapping that should be retrieved.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityMapping"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Deletes an existing entity mapping.",
        "operationId" : "deleteEntityMapping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the entity mapping that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "Config", "Entity Mapping" ],
        "summary" : "Updates an existing entity mapping.",
        "operationId" : "updateEntityMapping",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the entity mapping that should be updated.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EntityMapping"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/EntityMapping"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/masterdata/cantons" : {
      "get" : {
        "tags" : [ "Masterdata" ],
        "summary" : "Lists all available cantons.",
        "operationId" : "getListCantons",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Canton"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/masterdata/rightstatements" : {
      "get" : {
        "tags" : [ "Masterdata" ],
        "summary" : "Lists all available right statements.",
        "operationId" : "getListRightStatements",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/RightStatement"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/participants" : {
      "get" : {
        "tags" : [ "Config", "Participant" ],
        "summary" : "Lists all available participants.",
        "operationId" : "getListParticipants",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/participants/{id}" : {
      "delete" : {
        "tags" : [ "Config", "Participant" ],
        "summary" : "Deletes and existing participant.",
        "operationId" : "deleteParticipant",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the participant to delete.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/participants/{name}" : {
      "post" : {
        "tags" : [ "Config", "Participant" ],
        "summary" : "Creates a new participant.",
        "operationId" : "postCreateParticipant",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "description" : "The name of the new participant. Must be unique!",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/login" : {
      "post" : {
        "tags" : [ "Session" ],
        "summary" : "Attempts a login using the credentials provided in the request body.",
        "operationId" : "login",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/LoginRequest"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/logout" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Performs a logout for the currently logged-in user.",
        "operationId" : "logout",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/status" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Checks and returns the status of the current session.",
        "operationId" : "status",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/session/user" : {
      "get" : {
        "tags" : [ "Session" ],
        "summary" : "Returns information about the currently logged-in user.",
        "operationId" : "getUser",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/User"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "Session" ],
        "summary" : "Updates the currently active user.",
        "operationId" : "putUpdateUser",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SessionStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/solr" : {
      "get" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Lists all available Apache Solr configurations.",
        "operationId" : "getListSolrConfiguration",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ApacheSolrConfig"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Creates a new Apache Solr configuration.",
        "operationId" : "postCreateSolrConfig",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApacheSolrConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApacheSolrConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/solr/formats" : {
      "get" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Lists all available formats available for image deployment.",
        "operationId" : "getListImageFormats",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ImageFormat"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/solr/{id}" : {
      "get" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Retrieves all the details about an Apache Solr configuration.",
        "operationId" : "getSolrConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Apache Solr configuration that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApacheSolrConfig"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Deletes an existing Apache Solr configuration.",
        "operationId" : "deleteSolrConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Apache Solr configuration that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "Config", "Apache Solr" ],
        "summary" : "Updates an existing Apache Solr configuration.",
        "operationId" : "updateSolrConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the Apache Solr configuration that should be updated.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApacheSolrConfig"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApacheSolrConfig"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/templates" : {
      "get" : {
        "tags" : [ "Config", "Job Template", "Job" ],
        "summary" : "Lists all available job templates.",
        "operationId" : "getListJobTemplates",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/JobTemplate"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "Config", "Job Template" ],
        "summary" : "Creates a new job template.",
        "operationId" : "postCreateJobTemplate",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobTemplate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTemplate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/templates/types" : {
      "get" : {
        "tags" : [ "Config", "Job Template" ],
        "summary" : "Lists all available job template types.",
        "operationId" : "getListJobTemplateTypes",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/JobType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/templates/{id}" : {
      "get" : {
        "tags" : [ "Config", "Job Template" ],
        "summary" : "Deletes an existing job template.",
        "operationId" : "getJobTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the job template to retrieve.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTemplate"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "Config", "Job Template" ],
        "summary" : "Deletes an existing job template.",
        "operationId" : "deleteJobTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the job template that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "put" : {
        "tags" : [ "Config", "Job Template" ],
        "summary" : "Updates an existing job template.",
        "operationId" : "updateJobTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the job template that should be updated.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/JobTemplate"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JobTemplate"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/transformers/types" : {
      "get" : {
        "tags" : [ "Config", "Transformer" ],
        "summary" : "Lists all available transformer types.",
        "operationId" : "getListTransformerTypes",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TransformerType"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/users" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Retrieves all users registered in the database.",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "page",
          "in" : "query",
          "description" : "The page index (zero-based) for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "pageSize",
          "in" : "query",
          "description" : "The page size for pagination.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "order",
          "in" : "query",
          "description" : "The attribute to order by. Possible values are 'name', 'email', 'inactive'.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "orderDir",
          "in" : "query",
          "description" : "The sort order. Possible values are 'asc' and 'desc'.",
          "required" : false,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaginatedUserResult"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "post" : {
        "tags" : [ "User" ],
        "summary" : "Creates a new user.",
        "operationId" : "postCreateUser",
        "parameters" : [ ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/users/roles" : {
      "get" : {
        "tags" : [ "User" ],
        "summary" : "Lists all available roles.",
        "operationId" : "getListRoles",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/Role"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    },
    "/api/users/{id}" : {
      "put" : {
        "tags" : [ "User" ],
        "summary" : "Updates an existing user.",
        "operationId" : "putUpdateUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user that should be updated.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/User"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      },
      "delete" : {
        "tags" : [ "User" ],
        "summary" : "Deletes an existing user.",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "The ID of the user that should be deleted.",
          "required" : true,
          "deprecated" : false,
          "allowEmptyValue" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SuccessStatus"
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "403" : {
            "description" : "Forbidden",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "404" : {
            "description" : "Not Found",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          },
          "500" : {
            "description" : "Server Error",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ErrorStatus"
                }
              }
            }
          }
        },
        "deprecated" : false,
        "security" : [ ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "ImageDeployment" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "format" : {
            "$ref" : "#/components/schemas/ImageFormat"
          },
          "source" : {
            "type" : "string"
          },
          "path" : {
            "type" : "string"
          },
          "server" : {
            "type" : "string"
          },
          "maxSize" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "required" : [ "name", "format", "source", "path", "maxSize" ]
      },
      "ImageFormat" : {
        "type" : "string",
        "enum" : [ "JPEG", "PNG" ]
      },
      "AttributeMapping" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "source" : {
            "type" : "string"
          },
          "destination" : {
            "type" : "string"
          },
          "parser" : {
            "$ref" : "#/components/schemas/ValueParser"
          },
          "required" : {
            "type" : "boolean"
          },
          "multiValued" : {
            "type" : "boolean"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "source", "destination", "parser", "required", "multiValued", "parameters" ]
      },
      "EntityMapping" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/MappingFormat"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "attributes" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/AttributeMapping"
            }
          }
        },
        "required" : [ "name", "type", "attributes" ]
      },
      "MappingFormat" : {
        "type" : "string",
        "enum" : [ "XML", "JSON", "EXCEL" ]
      },
      "ValueParser" : {
        "type" : "string",
        "enum" : [ "UUID", "STRING", "MULTISTRING", "DATE", "INTEGER", "DOUBLE", "COORD_WGS84", "COORD_LV95", "IMAGE_FILE", "IMAGE_MPLUS" ]
      },
      "ApacheSolrCollection" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/CollectionType"
          },
          "selector" : {
            "type" : "string"
          },
          "deleteBeforeImport" : {
            "type" : "boolean"
          },
          "acceptEmptyFilter" : {
            "type" : "boolean"
          }
        },
        "required" : [ "name", "type", "deleteBeforeImport", "acceptEmptyFilter" ]
      },
      "ApacheSolrConfig" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "server" : {
            "type" : "string"
          },
          "publicServer" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "collections" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ApacheSolrCollection"
            }
          },
          "deployments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ImageDeployment"
            }
          }
        },
        "required" : [ "name", "server", "collections", "deployments" ]
      },
      "CollectionType" : {
        "type" : "string",
        "enum" : [ "OBJECT", "PERSON", "MUSEUM" ]
      },
      "JobTemplate" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/JobType"
          },
          "startAutomatically" : {
            "type" : "boolean"
          },
          "participantName" : {
            "type" : "string"
          },
          "solrConfigName" : {
            "type" : "string"
          },
          "entityMappingName" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "transformers" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TransformerConfig"
            }
          }
        },
        "required" : [ "name", "type", "startAutomatically", "participantName", "solrConfigName", "entityMappingName", "transformers" ]
      },
      "JobType" : {
        "type" : "string",
        "enum" : [ "XML", "JSON", "EXCEL", "KIAR" ]
      },
      "TransformerConfig" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/TransformerType"
          },
          "parameters" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        },
        "required" : [ "type", "parameters" ]
      },
      "TransformerType" : {
        "type" : "string",
        "enum" : [ "DISPLAY", "SYSTEM", "RIGHTS" ]
      },
      "Institution" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "displayName" : {
            "type" : "string"
          },
          "participantName" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "isil" : {
            "type" : "string"
          },
          "street" : {
            "type" : "string"
          },
          "zip" : {
            "type" : "integer",
            "format" : "int32"
          },
          "city" : {
            "type" : "string"
          },
          "canton" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "homepage" : {
            "type" : "string"
          },
          "publish" : {
            "type" : "boolean"
          },
          "availableCollections" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "selectedCollections" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "defaultRightStatement" : {
            "type" : "string"
          },
          "defaultCopyright" : {
            "type" : "string"
          },
          "imageName" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "name", "displayName", "participantName", "zip", "city", "canton", "email", "publish", "availableCollections", "selectedCollections" ]
      },
      "PaginatedInstitutionResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Institution"
            }
          }
        },
        "required" : [ "total", "page", "pageSize", "results" ]
      },
      "CreateJobRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "templateId" : {
            "type" : "string"
          },
          "jobName" : {
            "type" : "string"
          }
        },
        "required" : [ "templateId" ]
      },
      "Job" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "status" : {
            "$ref" : "#/components/schemas/JobStatus"
          },
          "source" : {
            "$ref" : "#/components/schemas/JobSource"
          },
          "template" : {
            "$ref" : "#/components/schemas/JobTemplate"
          },
          "processed" : {
            "type" : "integer",
            "format" : "int64"
          },
          "skipped" : {
            "type" : "integer",
            "format" : "int64"
          },
          "error" : {
            "type" : "integer",
            "format" : "int64"
          },
          "logEntries" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "createdBy" : {
            "type" : "string"
          }
        },
        "required" : [ "name", "status", "source", "processed", "skipped", "error", "logEntries", "createdAt", "createdBy" ]
      },
      "JobLog" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "jobId" : {
            "type" : "string"
          },
          "documentId" : {
            "type" : "string"
          },
          "collectionId" : {
            "type" : "string"
          },
          "context" : {
            "$ref" : "#/components/schemas/JobLogContext"
          },
          "level" : {
            "$ref" : "#/components/schemas/JobLogLevel"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "documentId", "context", "level", "description" ]
      },
      "JobLogContext" : {
        "type" : "string",
        "enum" : [ "METADATA", "RESOURCE", "SYSTEM" ]
      },
      "JobLogLevel" : {
        "type" : "string",
        "enum" : [ "WARNING", "ERROR", "VALIDATION", "SEVERE" ]
      },
      "JobSource" : {
        "type" : "string",
        "enum" : [ "WATCHER", "WEB" ]
      },
      "JobStatus" : {
        "type" : "string",
        "enum" : [ "CREATED", "ABORTED", "HARVESTED", "RUNNING", "SCHEDULED", "INTERRUPTED", "INGESTED", "FAILED" ]
      },
      "PaginatedJobLogResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/JobLog"
            }
          }
        },
        "required" : [ "total", "page", "pageSize", "results" ]
      },
      "PaginatedJobResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Job"
            }
          }
        },
        "required" : [ "total", "page", "pageSize", "results" ]
      },
      "Canton" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "shortName" : {
            "type" : "string"
          },
          "longName" : {
            "type" : "string"
          }
        },
        "required" : [ "shortName", "longName" ]
      },
      "RightStatement" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "shortName" : {
            "type" : "string"
          },
          "longName" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          }
        },
        "required" : [ "shortName", "longName", "url" ]
      },
      "LoginRequest" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          }
        },
        "required" : [ "username", "password" ]
      },
      "SessionStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "role" : {
            "$ref" : "#/components/schemas/Role"
          }
        },
        "required" : [ "username", "role" ]
      },
      "ErrorStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "code", "description" ]
      },
      "SuccessStatus" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "description" : {
            "type" : "string"
          }
        },
        "required" : [ "description" ]
      },
      "PaginatedUserResult" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "page" : {
            "type" : "integer",
            "format" : "int32"
          },
          "pageSize" : {
            "type" : "integer",
            "format" : "int32"
          },
          "results" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/User"
            }
          }
        },
        "required" : [ "total", "page", "pageSize", "results" ]
      },
      "Role" : {
        "type" : "string",
        "enum" : [ "ADMINISTRATOR", "MANAGER", "VIEWER" ]
      },
      "User" : {
        "type" : "object",
        "additionalProperties" : false,
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "role" : {
            "$ref" : "#/components/schemas/Role"
          },
          "institution" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "integer",
            "format" : "int64"
          },
          "changedAt" : {
            "type" : "integer",
            "format" : "int64"
          }
        },
        "required" : [ "username", "active", "role" ]
      }
    },
    "securitySchemes" : {
      "CookieAuth" : {
        "in" : "cookie",
        "name" : "SESSIONID",
        "type" : "apiKey"
      }
    }
  },
  "servers" : [ ],
  "security" : [ ]
}